#!/bin/zsh

# WARP
# ====
# Jump to custom directories in terminal
# because `cd` takes too long...
#
# @ github.com/mfaerevaag/warp


# variables
FILENAME=".warprc"
CONFIG=$HOME/$FILENAME
CONT=""


# if not exists
if [[ ! -e $CONFIG ]]
then
    touch $CONFIG
    print "No config file found so one was created"
fi

typeset -A points

# read config
while read line
do
    arr=(${(s,:,)line})
    key=${arr[1]}
    val=${arr[2]}

    points[$key]=$val
done < $CONFIG


# functions
warp()
{
    echo Warping...
    if [[ ${points[$1]} != "" ]]
    then
        cd ${points[$1]}
    else
        print Unkown warp point $i
    fi
}

add()
{
    if [[ ${points[$1]} == "" ]]
    then
        echo "$1:$PWD" >> $CONFIG
        print Warp point added
    else
        print Warp point by that name alredy exists
    fi
}

remove()
{
    if [[ ${points[$1]} != "" ]]
    then
        TMP=mktemp
        sed "/$1:/d" $CONFIG > $TMP
        if [ $? -eq 0 ]
        then
            cat $TMP > $CONFIG
            rm -f $TMP
            print Warp point removed
        else
            print Warp point unsuccessfully removed
        fi
    else
        print Warp point was not found
    fi
}

list_all()
{
    echo All warp points:
    while read line
    do
        arr=(${(s,:,)line})
        key=${arr[1]}
        val=${arr[2]}

        print "\t" $key "\t -> \t" $val
    done < $CONFIG
}


# get opts
args=`getopt -o a:r:l -l add:,remove:,list -- $*`

if [[ $? -ne 0 || $#* -eq 0 ]]
then
		echo 'Usage: ...'
else
    # can't exit, as this would exit the excecuting shell
    # e.i. your terminal
    CONT="true"
fi


# run
if [ $CONT ]
then
    #set -- $args # WTF

    for i
    do
		    case "$i"
		        in
			      -a|--add)
                add $2
				        shift
                shift
                break
                ;;
			      -r|--remove)
				        remove $2
                shift
				        shift
                break
                ;;
			      -l|--list)
				        list_all
				        shift
                break
                ;;
            *)
                warp $i
                shift
                break
                ;;
			      --)
				        shift; break;;
		    esac
    done
fi # exit


# garbage collection
# if not, next time warp will pick up present $CONT
# remember, there's no sub shell
points=""
CONT=""
