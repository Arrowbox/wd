#!/bin/zsh

# variables
CONT=""
WARP_ARG=""

FILENAME=".warprc"
FILE=$HOME/$FILENAME

# if not exists
if [[ ! -e $FILE ]]
then
    touch $FILE
    print "No config file found so one was created"
fi

typeset -A points

# read config
while read line
do
    #print "line: \t" $line

    arr=(${(s,:,)line})
    key=${arr[1]}
    val=${arr[2]}

    #print "arr: \t" $arr

    points[$key]=$val

    #print $key ':' ${points[$key]}
done < $FILE


# functions
warp()
{
    echo Warping...
    if [[ ${points[$1]} != "" ]]
    then
        cd ${points[$1]}
    else
        print Unkown warp point $i
    fi
}

add()
{
    if [[ ${points[$1]} == "" ]]
    then
        echo "$1:$PWD" >> $FILE
        print Warp point added
    else
        print Warp point by that name alredy exists
    fi
}

list_all()
{
    echo All warp points:
    while read line
    do
        arr=(${(s,:,)line})
        key=${arr[1]}
        val=${arr[2]}

        print "\t" $key "\t -> \t" $val
    done < $FILE
}


# get opts
args=`getopt -o a:r:l -l add:,remove:,list -- $*`

if [[ $? -ne 0 || $#* -eq 0 ]]
then
		echo 'Usage: ...'
else
    # can't exit, as this would exit the excecuting shell
    # e.i. your terminal
    CONT="true"
fi

#print $args
#tmp=(${(s,--,)args})
#print $#tmp

# run
if [ $CONT ]
then
    #set -- $args # WTF

    for i
    do
		    case "$i"
		        in
			      -a|--add)
                add $2
                WARP_ARG="$2"
				        shift
                shift
                break
                ;;
			      -r|--remove)
				        echo remove!
                WARP_ARG="$2"
                shift
				        shift
                break
                ;;
			      -l|--list)
				        list_all
                sflags="l$sflags"
				        shift
                break
                ;;
            *)
                warp $i
                WARP_ARG="$2"
                shift
                break
                ;;
			      --)
				        shift; break;;
		    esac
    done

    #print single-char flags: "'"$sflags"'"
    #print WARP_ARG is "'"$WARP_ARG"'"

fi # exit


# clean
sflags=""
WARP_ARG=""
